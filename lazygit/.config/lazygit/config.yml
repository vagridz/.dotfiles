# Custom commands
# https://gist.github.com/jerodg/074496e1e0014faeeaed34fb1ef64cd9
# https://github-wiki-see.page/m/jesseduffield/lazygit/wiki/Custom-Commands-Compendium
customCommands:
  - key: '<c-n>'
    context: 'global'
    prompts:
      - type: 'menu'
        title: 'Commit type'
        key: 'ConventionalCommitType'
        options:
          - name: '➕ build(add dependency)'
            description: 'Add a dependency.'
            value: '➕ build(add dependency)'
          - name: '🔨 build(dev scripts)'
            description: 'Add or update development scripts.'
            value: '🔨 build(dev scripts)'
          - name: '⬇️ build(downgrade dependencies)'
            description: 'Downgrade dependencies.'
            value: '⬇️ build(downgrade dependencies)'
          - name: '🧱 build(infra)'
            description: 'Infrastructure related changes.'
            value: '🧱 build(infra)'
          - name: '📦️ build(package)'
            description: 'Add or update compiled files or packages.'
            value: '📦️ build(package)'
          - name: '📌 build(pin versions)'
            description: 'Pin dependencies to specific versions.'
            value: '📌 build(pin versions)'
          - name: '🔖 build(release/tag)'
            description: 'Release / Version tags.'
            value: '🔖 build(release/tag)'
          - name: '➖ build(remove dependency)'
            description: 'Remove a dependency.'
            value: '➖ build(remove dependency)'
          - name: '⬆️ build(upgrade dependencies)'
            description: 'Upgrade dependencies.'
            value: '⬆️ build(upgrade dependencies)'
          - name: '🔧 chore(config)'
            description: 'Add or update configuration files.'
            value: '🔧 chore(config)'
          - name: '🚀 chore(deploy)'
            description: 'Deploy stuff.'
            value: '🚀 chore(deploy)'
          - name: '👷 ci(build)'
            description: 'Add or update CI build system.'
            value: '👷 ci(build)'
          - name: '💚 ci(fix)'
            description: 'Fix CI Build.'
            value: '💚 ci(fix)'
          - name: '📝 doc'
            description: 'Add or update documentation.'
            value: '📝 doc'
          - name: '👥 doc(contributors)'
            description: 'Add or update contributor(s).'
            value: '👥 doc(contributors)'
          - name: '💡 doc(comments)'
            description: 'Add or update comments in source code.'
            value: '💡 doc(comments)'
          - name: '📄 doc(license)'
            description: 'Add or update license.'
            value: '📄 doc(license)'
          - name: '💸 doc(money)'
            description: 'Add sponsorships or money related information.'
            value: '💸 doc(money)'
          - name: '📸 doc(snapshot)'
            description: 'Add or update snapshots.'
            value: '📸 doc(snapshot)'
          - name: '✏️ doc(typos)'
            description: 'Fix typos.'
            value: '✏️ doc(typos)'
          - name: '✨ feat'
            description: 'Introduce new features.'
            value: '✨ feat'
          - name: '🍱 feat(assets)'
            description: 'Add or update assets.'
            value: '🍱 feat(assets)'
          - name: '🛂 feat(authorization)'
            description: 'Work on authorization and roles.'
            value: '🛂 feat(authorization)'
          - name: '💩 feat(bad)'
            description: 'Write bad code that needs to be improved.'
            value: '💩 feat(bad)'
          - name: '👔 feat(business)'
            description: 'Add or update business logic.'
            value: '👔 feat(business)'
          - name: '🧩 feat(code update)'
            description: 'Add or update code modules.'
            value: '🧩 feat(code update)'
          - name: '🗃️ feat(database)'
            description: 'Perform database related changes.'
            value: '🗃️ feat(database)'
          - name: '🧑‍💻 feat(developers)'
            description: 'Improve developer experience.'
            value: '🧑‍💻 feat(developers)'
          - name: '🥅 feat(error catch)'
            description: 'Catch errors.'
            value: '🥅 feat(error catch)'
          - name: '🎉 feat(initial commit)'
            description: 'Begin a project.'
            value: '🎉 feat(initial commit)'
          - name: '🔊 feat(log)'
            description: 'Add or update logs.'
            value: '🔊 feat(log)'
          - name: '🧵 feat(multithread)'
            description: 'Add or update code related to multithreading or concurrency.'
            value: '🧵 feat(multithread)'
          - name: '🔇 feat(remove log)'
            description: 'Remove logs.'
            value: '🔇 feat(remove log)'
          - name: '🔐 feat(secrets)'
            description: 'Add or update secrets.'
            value: '🔐 feat(secrets)'
          - name: '🌱 feat(seeds)'
            description: 'Add or update seed files.'
            value: '🌱 feat(seeds)'
          - name: '💬 feat(text and literals)'
            description: 'Add or update text and literals.'
            value: '💬 feat(text and literals)'
          - name: '🏷️ feat(types)'
            description: 'Add or update types.'
            value: '🏷️ feat(types)'
          - name: '💄 feat(UI)'
            description: 'Add or update the UI and style files.'
            value: '💄 feat(UI)'
          - name: '🚸 feat(usability)'
            description: 'Improve user experience / usability.'
            value: '🚸 feat(usability)'
          - name: '🦺 feat(validation)'
            description: 'Add or update code related to validation.'
            value: '🦺 feat(validation)'
          - name: '🐛 fix'
            description: 'Fix a bug.'
            value: '🐛 fix'
          - name: '🚑️ fix(hotfix)'
            description: 'Critical hotfix.'
            value: '🚑️ fix(hotfix)'
          - name: '🚨 fix(linter, warnings)'
            description: 'Fix compiler / linter warnings.'
            value: '🚨 fix(linter, warnings)'
          - name: '🩹 fix(minor)'
            description: 'Simple fix for a non-critical issue.'
            value: '🩹 fix(minor)'
          - name: '🔒️ fix(security)'
            description: 'Fix security issues or privacy issues.'
            value: '🔒️ fix(security)'
          - name: '🌐 fix(security)'
            description: 'Internationalization and localization.'
            value: '🌐 fix(security)'
          - name: '🔀 merge'
            description: 'Merge branches.'
            value: '🔀 merge'
          - name: '⚡️ perf'
            description: 'Improve performance.'
            value: '⚡️ perf'
          - name: '♻️ refactor'
            description: 'Refactor code.'
            value: '♻️ refactor'
          - name: '🏗️ refactor(architecture)'
            description: 'Make architectural changes.'
            value: '🏗️ refactor(architecture)'
          - name: '🧹 refactor(cleanup)'
            description: 'General cleanup.'
            value: '🧹 refactor(cleanup)'
          - name: '⚰️ refactor(dead code)'
            description: 'Remove dead code.'
            value: '⚰️ refactor(dead code)'
          - name: '🗑️ refactor(deprecation)'
            description: 'Deprecate code that needs to be cleaned up.'
            value: '🗑️ refactor(deprecation)'
          - name: '🚚 refactor(move resource)'
            description: 'Move or rename resources (e.g.: files, paths, routes).'
            value: '🚚 refactor(move resource)'
          - name: '💥 refactor(no backward compatibility)'
            description: 'Introduce breaking changes.'
            value: '💥 refactor(no backward compatibility)'
          - name: '🔥 refactor(remove code)'
            description: 'Remove code or files.'
            value: '🔥 refactor(remove code)'
          - name: '👽️ refactor(update to external change)'
            description: 'Update code due to external API changes.'
            value: '👽️ refactor(update to external change)'
          - name: '⏪️ revert'
            description: 'Revert changes.'
            value: '⏪️ revert'
          - name: '🎨 style(code format)'
            description: 'Improve structure / format of the code.'
            value: '🎨 style(code format)'
          - name: '✅ test'
            description: 'Add, update, or pass tests.'
            value: '✅ test'
          - name: '🧪 test(fail)'
            description: 'Add failing tests.'
            value: '🧪 test(fail)'
          - name: '🥇 test(edge case)'
            description: 'Add or update tests for edge cases.'
            value: '🥇 test(edge case)'
          - name: '🩺 test(healthcheck)'
            description: 'Add or update healthcheck.'
            value: '🩺 test(healthcheck)'
          - name: '🚧 wip(DO NOT COMMIT. STASH INCOMPLETE WORK INSTEAD)'
            description: 'Unfinished work is not supposed to be commited.'
            value: '🚧 wip(DO NOT COMMIT. STASH INCOMPLETE WORK INSTEAD)'
          - name: '⚗️ wip(trigger CI)'
            description: 'Perform (DevOps) experiments (such as committing to trigger CI pipelines).'
            value: '⚗️ wip(trigger CI)'
      - type: 'menu'
        title: 'Commit optional scope'
        key: 'ConventionalCommitOptionalScope'
        options:
          - name: 'Mixte'
            Description: 'Mixte'
            value: ''
          - name: 'Breaking change'
            Description: 'Breaking change'
            value: '!'
          - name: 'Addition only'
            Description: 'Addition only'
            value: '+'
          - name: 'Removal only'
            Description: 'Removal only'
            value: '-'
          - name: 'Change only'
            Description: 'Change only'
            value: '~'
      - type: 'input'
        title: 'Commit description'
        key: 'ConventionalCommitDescription'
        initialValue: ''
      - type: 'input'
        title: 'Commit body'
        key: 'ConventionalCommitBody'
        initialValue: ''
      - type: 'confirm'
        key: 'ConventionalCommitConfirm'
        title: 'Commit'
        body: 'Are you sure you want to commit?'
    command: "git commit --message '{{.Form.ConventionalCommitType}}{{.Form.ConventionalCommitOptionalScope}}: {{.Form.ConventionalCommitDescription}}' {{ if .Form.ConventionalCommitBody }}--message '{{.Form.ConventionalCommitBody}}'{{ end}}"
    subprocess: true
    loadingText: "git commit --message '{{.Form.ConventionalCommitType}}{{.Form.ConventionalCommitOptionalScope}}: {{.Form.ConventionalCommitDescription}}' {{ if .Form.ConventionalCommitBody }}--message '{{.Form.ConventionalCommitBody}}'{{ end}}"

